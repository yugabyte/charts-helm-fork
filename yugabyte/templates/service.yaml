{{- $root := . -}}

{{- range .Values.Services }}

---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .name }}"
  labels:
    app: "{{ .label }}"
    heritage: {{ $root.Release.Service | quote }}
    release: {{ $root.Release.Name | quote }}
    chart: "{{ $root.Chart.Name }}-{{ $root.Chart.Version }}"
    component: "{{ $root.Values.Component }}"
spec:
  clusterIP: None
  ports:
    {{- range $label, $port := .ports }}
    - name: {{ $label | quote }}
      port: {{ $port }}
    {{- end}}
  selector:
    app: "{{ .label }}"

{{ if $root.Values.enableLoadBalancer }}
{{- $service := . -}}
{{- range $endpoint :=  $root.Values.serviceEndpoints }}
{{- if eq $service.label $endpoint.app }}
{{ end }}
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ $endpoint.name }}"
{{- if $root.Values.annotations }}
  annotations:
  {{ if eq .name "yb-master-service" }}
    {{- if $root.Values.annotations.master }}
    {{- if $root.Values.annotations.master.loadbalancer }}
{{ toYaml $root.Values.annotations.master.loadbalancer | indent 4 }}
    {{- end}}
    {{- end}}
  {{ else }}
    {{- if $root.Values.annotations.tserver }}
    {{- if $root.Values.annotations.tserver.loadbalancer }}
{{ toYaml $root.Values.annotations.tserver.loadbalancer | indent 4 }}
    {{- end}}
    {{- end}}
  {{- end}}
  {{- end }}
  labels:
    app: "{{ $endpoint.app }}"
    heritage: {{ $root.Release.Service | quote }}
    release: {{ $root.Release.Name | quote }}
    chart: "{{ $root.Chart.Name }}-{{ $root.Chart.Version }}"
    component: "{{ $root.Values.Component }}"
spec:
  clusterIP:
  ports:
    {{- range $label, $port := $endpoint.ports }}
    - name: {{ $label | quote }}
      port: {{ $port }}
    {{- end}}
  selector:
    app: "{{ $endpoint.app }}"
  type: {{ $endpoint.type }}
{{- end}}
{{- end}}

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .label }}"
  namespace: "{{ $root.Release.Namespace }}"
  labels:
    app: "{{ .label }}"
    heritage: {{ $root.Release.Service | quote }}
    release: {{ $root.Release.Name | quote }}
    chart: "{{ $root.Chart.Name }}-{{ $root.Chart.Version }}"
    component: "{{ $root.Values.Component }}"
spec:
  serviceName: "{{ .name }}"
  podManagementPolicy: {{ $root.Values.PodManagementPolicy }}
  {{ if eq .name "yb-masters" }}
  replicas: {{ $root.Values.replicas.master }}
  {{ else }}
  replicas: {{ $root.Values.replicas.tserver  }}
  {{ end }}
  volumeClaimTemplates:
    {{- $storageInfo := (eq .name "yb-masters") | ternary $root.Values.storage.master $root.Values.storage.tserver -}}
    {{- range $index := until (int ($storageInfo.count )) }}
    - metadata:
        name: datadir{{ $index }}
        labels:
          heritage: {{ $root.Release.Service | quote }}
          release: {{ $root.Release.Name | quote }}
          chart: "{{ $root.Chart.Name }}-{{ $root.Chart.Version }}"
          component: "{{ $root.Values.Component }}"
      spec:
        accessModes:
          - "ReadWriteOnce"
        {{- if $storageInfo.storageClass }}
        storageClassName: {{ $storageInfo.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ $storageInfo.size }}
    {{- end }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      {{ if eq .name "yb-masters" }}
      partition: {{ $root.Values.partition.master }}
      {{ else }}
      partition: {{ $root.Values.partition.tserver }}
      {{ end }}
  selector:
    matchLabels:
      app: "{{ .label }}"
  template:
    metadata:
      labels:
        app: "{{ .label }}"
        heritage: {{ $root.Release.Service | quote }}
        release: {{ $root.Release.Name | quote }}
        chart: "{{ $root.Chart.Name }}-{{ $root.Chart.Version }}"
        component: "{{ $root.Values.Component }}"
    spec:
      {{- if $root.Values.Image.pullSecretName }}
      imagePullSecrets:
      - name: {{ $root.Values.Image.pullSecretName }}
      {{ end }}
      {{- if $root.Values.nodeSelector }}
      nodeSelector:
      {{ toYaml $root.Values.nodeSelector | indent 8 }}
      {{- end }}
      affinity:
        # Set the anti-affinity selector scope to YB masters.
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - "{{ .label }}"
              topologyKey: kubernetes.io/hostname
      containers:
      - name: "{{ .label }}"
        image: "{{ $root.Values.Image.repository }}:{{ $root.Values.Image.tag }}"
        imagePullPolicy: {{ $root.Values.Image.pullPolicy }}
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
        {{ if eq .name "yb-masters" }}
{{ toYaml $root.Values.resource.master | indent 10 }}
        {{ else }}
{{ toYaml $root.Values.resource.tserver | indent 10 }}
        {{ end }}
        metadata:
          labels:
            heritage: {{ $root.Release.Service | quote }}
            release: {{ $root.Release.Name | quote }}
            chart: "{{ $root.Chart.Name }}-{{ $root.Chart.Version }}"
            component: "{{ $root.Values.Component }}"
        command:
        {{ if eq .name "yb-masters" }}
          - "/home/yugabyte/bin/yb-master"
          - "--fs_data_dirs={{range $index := until (int ($storageInfo.count))}}{{if ne $index 0}},{{end}}/mnt/disk{{ $index }}{{end}}"
          - "--rpc_bind_addresses=$(POD_IP)"
          - "--server_broadcast_addresses=$(HOSTNAME).yb-masters.$(NAMESPACE):7100"
          - "--master_addresses={{range $index := until (int ($root.Values.replicas.master))}}{{if ne $index 0}},{{end}}yb-master-{{ $index }}.yb-masters.$(NAMESPACE):7100{{end}}"
          - "--metric_node_name=$(HOSTNAME)"
          - "--memory_limit_hard_bytes={{ template "yugabyte.memory_hard_limit" $root.Values.resource.master }}"
          - "--stderrthreshold=0"
          {{- range $flag, $override := $root.Values.gflags.master }}
          - "--{{ $flag }}={{ $override }}"
          {{- end}}
        {{ else }}
          - "/home/yugabyte/bin/yb-tserver"
          - "--fs_data_dirs={{range $index := until (int ($storageInfo.count))}}{{if ne $index 0}},{{end}}/mnt/disk{{ $index }}{{end}}"
          - "--server_broadcast_addresses=$(HOSTNAME).yb-tservers.$(NAMESPACE):9100"
          {{ if $root.Values.enablePostgres }}
          - "--start_pgsql_proxy"
          - "--pgsql_proxy_bind_address=$(POD_IP):5433"
          {{ end }}
          - "--tserver_master_addrs={{range $index := until (int ($root.Values.replicas.master))}}{{if ne $index 0}},{{end}}yb-master-{{ $index }}.yb-masters.$(NAMESPACE):7100{{end}}"
          - "--metric_node_name=$(HOSTNAME)"
          - "--memory_limit_hard_bytes={{ template "yugabyte.memory_hard_limit" $root.Values.resource.tserver }}"
          - "--stderrthreshold=0"
          {{- range $flag, $override := $root.Values.gflags.tserver }}
          - "--{{ $flag }}={{ $override }}"
          {{- end}}
        {{ end }}
        ports:
          {{- range $label, $port := .ports }}
          - containerPort: {{ $port }}
            name: {{ $label | quote }}
          {{- end}}
        volumeMounts:
          {{- range $index := until (int ($storageInfo.count)) }}
          - name: datadir{{ $index }}
            mountPath: /mnt/disk{{ $index }}
          {{- end }}
      volumes:
        {{- range $index := until (int ($storageInfo.count)) }}
        - name: datadir{{ $index }}
          hostPath:
            path: /mnt/disks/ssd{{ $index }}
        {{- end }}
{{- end }}
